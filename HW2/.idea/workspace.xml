<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="293cb94b-32e9-4523-a2f9-6ca740c26ed9" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Appearances.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Appearances.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/CharGrid.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CharGrid.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Point.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Point.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Shape.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Shape.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/StringCode.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/StringCode.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Taboo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Taboo.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/TetrisGrid.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/TetrisGrid.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/AppearancesTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/AppearancesTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/CharGridTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CharGridTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/PointTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/PointTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/StringCodeTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/StringCodeTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/TabooTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/TabooTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/TetrisGridTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/TetrisGridTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="33OxUrMnj0QK6dfz5xzJFuf4SKS" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.StringCodeTest.testBlowup_BasicCases.executor": "Run",
    "JUnit.StringCodeTest.testBlowup_BasicCases.executor": "Run",
    "JUnit.StringCodeTest.testBlowup_DigitAtEnd.executor": "Run",
    "JUnit.StringCodeTest.testBlowup_DigitZero.executor": "Run",
    "JUnit.StringCodeTest.testBlowup_DigitsNextToEachOther.executor": "Run",
    "JUnit.StringCodeTest.testBlowup_DigitsOnly.executor": "Run",
    "JUnit.StringCodeTest.testBlowup_WeirdChars.executor": "Run",
    "JUnit.StringCodeTest.testEdgeCaseLength1.executor": "Run",
    "JUnit.StringCodeTest.testIntersectExists.executor": "Run",
    "JUnit.StringCodeTest.testLengthEqualToString.executor": "Run",
    "JUnit.StringCodeTest.testLengthTooLarge.executor": "Run",
    "JUnit.StringCodeTest.testMaxRun_BasicCases.executor": "Run",
    "JUnit.StringCodeTest.testMaxRun_LongestAtBeginning.executor": "Run",
    "JUnit.StringCodeTest.testMaxRun_LongestAtEnd.executor": "Run",
    "JUnit.StringCodeTest.testMaxRun_NotSureWhyNeeded.executor": "Run",
    "JUnit.StringCodeTest.testMaxRun_SpecialCases.executor": "Run",
    "JUnit.StringCodeTest.testNoIntersect.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/ADMIN/Desktop/oop/HW2",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="JUnit.StringCodeTest.testLengthEqualToString">
    <configuration name="StringCodeTest.testEdgeCaseLength1" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HW2" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="StringCodeTest" />
      <option name="METHOD_NAME" value="testEdgeCaseLength1" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringCodeTest.testIntersectExists" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HW2" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="StringCodeTest" />
      <option name="METHOD_NAME" value="testIntersectExists" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringCodeTest.testLengthEqualToString" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HW2" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="StringCodeTest" />
      <option name="METHOD_NAME" value="testLengthEqualToString" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringCodeTest.testLengthTooLarge" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HW2" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="StringCodeTest" />
      <option name="METHOD_NAME" value="testLengthTooLarge" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringCodeTest.testNoIntersect" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HW2" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="StringCodeTest" />
      <option name="METHOD_NAME" value="testNoIntersect" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.StringCodeTest.testLengthEqualToString" />
        <item itemvalue="JUnit.StringCodeTest.testEdgeCaseLength1" />
        <item itemvalue="JUnit.StringCodeTest.testLengthTooLarge" />
        <item itemvalue="JUnit.StringCodeTest.testNoIntersect" />
        <item itemvalue="JUnit.StringCodeTest.testIntersectExists" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-bf35d07a577b-intellij.indexing.shared.core-IU-252.26199.169" />
        <option value="bundled-js-predefined-d6986cc7102b-9c94529fcfe0-JavaScript-IU-252.26199.169" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="293cb94b-32e9-4523-a2f9-6ca740c26ed9" name="Changes" comment="" />
      <created>1759201939066</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1759201939066</updated>
      <workItem from="1759201940411" duration="26000" />
      <workItem from="1759228333890" duration="36000" />
      <workItem from="1759294474482" duration="6274000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>